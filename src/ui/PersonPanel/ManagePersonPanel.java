/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.PersonPanel;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import models.Person;
import models.PersonDirectory;

/**
 *
 * @author shreya
 */
public class ManagePersonPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPersonPanel
     */
    private JPanel WorkAreaPanel;
    PersonDirectory personDirectory;

    public ManagePersonPanel(JPanel WorkAreaPanel, PersonDirectory personDirectory) {
        initComponents();
        this.WorkAreaPanel = WorkAreaPanel;
        this.personDirectory = personDirectory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManagePerson = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePerson = new javax.swing.JTable();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        btnUpdatePerson = new javax.swing.JButton();
        btnViewPerson = new javax.swing.JButton();
        btnDeletePerson = new javax.swing.JButton();
        txtCommunity = new javax.swing.JComboBox<>();
        lblUniqueID = new javax.swing.JLabel();
        txtUniqueID = new javax.swing.JTextField();

        setBackground(new java.awt.Color(153, 102, 255));

        lblManagePerson.setBackground(new java.awt.Color(255, 255, 255));
        lblManagePerson.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblManagePerson.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManagePerson.setText("MANAGE PERSON");

        tablePerson.setBackground(new java.awt.Color(204, 204, 255));
        tablePerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Age", "Address", "Email", "Community"
            }
        ));
        jScrollPane1.setViewportView(tablePerson);

        lblName.setBackground(new java.awt.Color(255, 255, 255));
        lblName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblName.setText("Name:");

        lblAge.setBackground(new java.awt.Color(255, 255, 255));
        lblAge.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblAge.setText("Age:");

        lblEmail.setBackground(new java.awt.Color(255, 255, 255));
        lblEmail.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblEmail.setText("Email:");

        lblAddress.setBackground(new java.awt.Color(255, 255, 255));
        lblAddress.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblAddress.setText("Address:");

        lblCommunity.setBackground(new java.awt.Color(255, 255, 255));
        lblCommunity.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblCommunity.setText("Community:");

        btnUpdatePerson.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdatePerson.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnUpdatePerson.setText("Update");
        btnUpdatePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePersonActionPerformed(evt);
            }
        });

        btnViewPerson.setBackground(new java.awt.Color(255, 255, 255));
        btnViewPerson.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnViewPerson.setText("View");
        btnViewPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPersonActionPerformed(evt);
            }
        });

        btnDeletePerson.setBackground(new java.awt.Color(255, 255, 255));
        btnDeletePerson.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnDeletePerson.setText("Delete");
        btnDeletePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePersonActionPerformed(evt);
            }
        });

        txtCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Roxbury", "Mission Main", "Longwood", "Saint Germain" }));

        lblUniqueID.setBackground(new java.awt.Color(255, 255, 255));
        lblUniqueID.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblUniqueID.setText("ID:");

        txtUniqueID.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblManagePerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCommunity, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblUniqueID)
                        .addGap(27, 27, 27)
                        .addComponent(txtUniqueID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblAge)
                        .addGap(27, 27, 27)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblAddress)
                        .addGap(27, 27, 27)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblName)
                        .addGap(27, 27, 27)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(202, 202, 202))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(btnViewPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118)
                        .addComponent(btnDeletePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(418, 418, 418)
                        .addComponent(btnUpdatePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblManagePerson)
                .addGap(71, 71, 71)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeletePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblUniqueID)
                        .addComponent(txtUniqueID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblName)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEmail)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCommunity))))
                .addGap(47, 47, 47)
                .addComponent(btnUpdatePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPersonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = tablePerson.getSelectedRow();
        
        if(selectedIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a Row");
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tablePerson.getModel();
            Person selectedPerson = (Person) model.getValueAt(selectedIndex, 0);
            
            txtUniqueID.setText(selectedPerson.getUnique_id());
            txtName.setText(selectedPerson.getName());
            txtAge.setText(String.valueOf(selectedPerson.getAge()));
            txtAddress.setText(selectedPerson.getAddress());
            txtEmail.setText(selectedPerson.getEmail());
            txtCommunity.setSelectedItem(selectedPerson.getCommunity());
            
        }
        
    }//GEN-LAST:event_btnViewPersonActionPerformed

    private void btnDeletePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePersonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = tablePerson.getSelectedRow();
        
        if(selectedIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a Row");
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tablePerson.getModel();
            Person selectedPerson = (Person) model.getValueAt(selectedIndex, 0);
            
            personDirectory.getPersonDirectory().remove(selectedPerson);
            populateTable();
            JOptionPane.showMessageDialog(this, "Person deleted");
            
            
        }
    }//GEN-LAST:event_btnDeletePersonActionPerformed

    private void btnUpdatePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePersonActionPerformed
        // TODO add your handling code here:
        ArrayList<Person> personList = new ArrayList<>();
        personList = personDirectory.getPersonDirectory();
        
        int selectedIndex = tablePerson.getSelectedRow();
        
        if(selectedIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a Row");
        }
        else{
            if(txtUniqueID.equals("") || txtName.equals("") || txtAddress.equals("") || txtEmail.equals("") || txtCommunity.equals("")){
            JOptionPane.showMessageDialog(this, "Missing Fields");
        }
        else {
            DefaultTableModel model = (DefaultTableModel) tablePerson.getModel();
            Person person = (Person) model.getValueAt(selectedIndex, 0);
            
            // Check for Unique ID
            Set<String> uniqueIDList = new HashSet<String>();
            for (Person persons: personDirectory.getPersonDirectory() ){
                uniqueIDList.add(persons.getUnique_id());
            }
            
            if(uniqueIDList.contains(txtUniqueID)){
                JOptionPane.showMessageDialog(this, "Person already exists");
                personDirectory.getPersonDirectory().remove(person);
            }
            else{
                person.setUnique_id(txtUniqueID.getText());
            }
            person.setName(txtName.getText());
            person.setAge(Integer.parseInt(txtAge.getText()));
            person.setEmail(txtEmail.getText());
            person.setAddress(txtAddress.getText());
            person.setCommunity(txtCommunity.getSelectedItem().toString());
            
            populateTable();
            JOptionPane.showMessageDialog(this, "Person Updated Successfully");            
        
            }
        }
    }//GEN-LAST:event_btnUpdatePersonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeletePerson;
    private javax.swing.JButton btnUpdatePerson;
    private javax.swing.JButton btnViewPerson;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblManagePerson;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblUniqueID;
    private javax.swing.JTable tablePerson;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JComboBox<String> txtCommunity;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtUniqueID;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tablePerson.getModel();
        model.setRowCount(0);
        
        for(Person person: personDirectory.getPersonDirectory() ){
            Object[] row = new Object[6];
            row[0] = person;
            row[1] = person.getName();
            row[2] = person.getAge();
            row[3] = person.getAddress();
            row[4] = person.getEmail();
            row[5] = person.getCommunity();
            
            model.addRow(row);
        }
        
    }
}
